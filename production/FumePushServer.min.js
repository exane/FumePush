var Socket=function(){var n=function(n){this.port=n,this.listen()},o=n.prototype;return o.port=null,o.io=null,o._rooms=[],o._events=[],o.listen=function(){this.io=require("socket.io").listen(this.port,{log:!1}),this.onConnection()},o.onConnection=function(){var n=this;this.io.on("connection",function(o){console.log("new user connected"),n.onDisconnect(o),n.onTriggerEvent(o),n.onJoinEvent(o),n.onLeaveEvent(o)})},o.onDisconnect=function(n){n.on("disconnect",function(){console.log("user disconnected")})},o.onTriggerEvent=function(n){var o=this;n.on("Trigger:Event",function(t){t.isBroadcasting?o.broadcast(n,t):t.toAll?o.trigger(n,t,!0):o.trigger(n,t)})},o.onJoinEvent=function(n){var o=this;n.on("Join:Room",function(t){console.log("joined room"),n.join(t);for(var e=0;e<o._rooms.length;e++)if(o._rooms[e]==t)return 0;o._rooms.push(t)})},o.onLeaveEvent=function(n){var o=this;n.on("Leave:Room",function(t){console.log("leaved room",t),n.leave(t);for(var e=0;e<o._rooms.length;e++)if(o._rooms[e]==t)return o._rooms.splice(e,1)})},o.addEvent=function(n){this._events.push(n)},o.removeEvent=function(n){for(var o=0;o<this._events.length;o++)if(this._events[o]==n)return this._events.splice(o,1),this.removeEvent(n)},o.hasEvent=function(n){for(var o=0;o<this._events.length;o++)if(this._events[o]==n)return!0;return!1},o.trigger=function(n,o,t){t=t||!1,t?this.io.sockets.emit(o.event,o):this.io.sockets.to(o.room).emit(o.event,o)},o.broadcast=function(n,o){n.broadcast.emit(o.event,o)},n}();module.exports=Socket;